project_name: opsani-cli

release:
  prerelease: auto

env:
  - GO111MODULE=on
  - GOPROXY=https://gocenter.io

before:
  hooks:
    - go mod download
    - go mod tidy

builds:
  - <<: &build_defaults
      binary: bin/opsani
      ldflags:
        - -s -w -X github.com/opsani/cli/opsani.Version={{.Version}} -X github.com/opsani/cli/opsani.BuildDate={{.Date}}
    id: macos
    goos: [darwin]
    goarch: [amd64]
  - <<: *build_defaults
    id: linux
    goos: [linux]
    goarch: [386, amd64, arm64]
  - <<: *build_defaults
    id: windows
    goos: [windows]
    goarch: [386, amd64]

archives:
  - id: nix
    builds: [macos, linux]
    <<: &archive_defaults
      name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"
    wrap_in_directory: true
    replacements:
      darwin: macOS
    format: tar.gz
    files:
      - README.md
      - LICENSE
      - CHANGELOG.md
  - id: windows
    builds: [windows]
    <<: *archive_defaults
    wrap_in_directory: false
    format: zip
    files:
      - README.md
      - LICENSE
      - CHANGELOG.md

brews:
  - name: opsani-cli
    ids: [nix]
    github:
      owner: opsani
      name: homebrew-tap
    skip_upload: auto
    description: Opsani CLI
    homepage: https://github.com/opsani/cli
    folder: Formula
    custom_block: |
      head do
        url "https://github.com/opsani/cli.git"
        depends_on "go"
      end
    install: |
      system "make build" if build.head?
      bin.install "bin/opsani"
      (bash_completion/"opsani.sh").write `#{bin}/opsani completion -s bash`
      (zsh_completion/"_opsani").write `#{bin}/opsani completion -s zsh`
      (fish_completion/"opsani.fish").write `#{bin}/opsani completion -s fish`
    test: |
      help_text = shell_output("#{bin}/opsani --help")
      assert_includes help_text, "Usage:"

nfpms:
  - license: Apache 2.0
    maintainer: Blake Watters <blake@opsani.com>
    vendor: Opsani
    homepage: https://github.com/opsani/cli
    description: Continuous Optimization in your terminal.
    bindir: /usr/local
    dependencies:
      - git
    formats:
      - deb
      - rpm

# scoop:
#   bucket:
#     owner: opsani
#     name: scoop-bucket
#   homepage: https://github.com/opsani/cli
#   skip_upload: auto
#   description: Opsani CLI
#   license: MIT
  
# Docker isn't finding the binaries
# dockers:
#   -
#     goos: linux
#     goarch: amd64
#     goarm: '6'
#     skip_push: true
#     builds:
#     - linux
#     binaries:
#     - bin/opsani
#     image_templates:
#     - "opsani/cli:latest"
#     - "opsani/cli:{{ .Tag }}"
#     dockerfile: Dockerfile

checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ .Tag }}-next"
changelog:
  sort: asc
  filters:
    exclude:
    - '^docs:'
    - '^test:'
